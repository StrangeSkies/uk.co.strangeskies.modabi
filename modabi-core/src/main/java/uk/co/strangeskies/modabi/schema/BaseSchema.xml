<?xml version="1.1"?>
<modelSchema xmlns="modabi.strangeskies.co.uk">

	<types>
		<type name="data" dataClass=".data.DataSource" abstract="true" /> <!-- provided -->

		<type name="binary" dataClass="byte[]" bindingClass="BufferedDataSource"
			bindingStrategy="PROVIDED">
			<data type="uk.co.strangeskies.utils.Enumeration">
				<inputSequence id="valueOf">
					<data id="enumType" value="uk.co.strangeskies.modabi.data.io.DataType" />
				</inputSequence>
			</data>
		</type>
		<type name="string" dataClass="java.lang.String"></type>
		<type name="integer" dataClass="java.math.BigInteger"></type>
		<type name="int" dataClass="java.lang.Integer"></type>
		<type name="double" dataClass="java.lang.Double"></type>
		<type name="boolean" dataClass="java.lang.Boolean"></type>

		<type name="list" dataClass="java.util.List">
			<properties>
				<property id="elementType" type="string" />
			</properties>
		</type>
		<type name="set" dataClass="java.util.Set">
			<properties>
				<property id="elementType" type="string" />
			</properties>
		</type>

		<type name="class" dataClass="java.lang.Class"></type>
		<type name="classes">
			<baseType type="set" elementType="class" />
		</type>
		<type name="enum" dataClass="java.lang.Enum">
			<baseType type="string" />
			<properties>
				<property id="enumClass" type="class" />
			</properties>
		</type>

		<type name="reference" dataClass="java.lang.Object">
			<properties>
				<property id="targetDomain" type="qualifiedName" />
				<property id="targetIdProperty" type="string" />
				<property id="domain" type="qualifiedName" />
			</properties>
		</type>

		<type name="softReference">
			<baseType type="reference" />
		</type>
	</types>

	<models>
		<model id="include" builderClass=".processing.SchemaBinder">
			<property id="ns" optional="true" />
			<property id="id" />
		</model>

		<model id="map" class="java.util.Map" abstract="true">
			<element bindingStrategy="targetAdaptor" inMethod="this"
				outMethod="elementSet" outMethodIterable="true">
				<sequence inMethod="put">
					<data id="key" />
					<data id="value" />
				</sequence>
			</element>
		</model>

		<model id="logic" />
		<model id="and" model="logic">
			<model model="logic" occurances="2.." />
		</model>
		<model id="or" model="logic">
			<model model="logic" occurances="2.." />
		</model>
		<model id="xor" model="logic">
			<model model="logic" occurances="2" />
		</model>
		<model id="nor" model="logic">
			<model model="logic" occurances="2" />
		</model>
		<model id="nand" model="logic">
			<model model="logic" occurances="2" />
		</model>
		<model id="condition" model="logic">

		</model>
	</models>

</modelSchema>
