########################
## BND BUILD SETTINGS ##
########################

## Java Compiler Options
javac.source: 1.8
javac.target: 1.8

## Bnd Options
-sources: true

bnd-release = https://bndtools.ci.cloudbees.com/job/bnd.master/lastSuccessfulBuild/artifact/dist/bundles

copyright.year = ${tstamp;yyyy}
copyright = Copyright (c) Strange Skies (2014, ${copyright.year}). All Rights Reserved.

groupid: uk.co.strangeskies.modabi

modabi-version: 1.0.0
modabi-version-ceiling: 2.0.0

Bundle-Vendor: Strange Skies http://strangeskies.co.uk/
Bundle-Copyright: ${copyright}
Bundle-License: LGPL <http://www.gnu.org/licenses/>
Bundle-Version: ${modabi-version}.${tstamp}

-dsannotations: *

## Properties from ext/*.bnd can be referenced in order to extend them. For
## example, to add one additional plugin to the list defined in
## ext/repositories.bnd:
# -plugin: ${ext.repositories.-plugin}, org.example.MyPlugin

## To enable baselining, uncomment the following lines:
# -baseline: *
-releaserepo: Release

modabi-bnd-plugin: ${build}/release/uk.co.strangeskies.modabi.bnd.${1}/uk.co.strangeskies.modabi.bnd.${1}-${modabi-version}.jar

pluginpath.modabi: \
	${modabi-bnd-plugin;xml}

-pluginpath.base: \
	${build}/cache/biz.aQute.repository.aether.jar; \
		url = ${bnd-release}/biz.aQute.repository.aether/biz.aQute.repository.aether-latest.jar

ss: ${def;strangeSkiesDependency;uk.co.strangeskies:uk.co.strangeskies.${1}\\\;version=latest}
strangeSkiesDefaultRepo: \
\
		aQute.bnd.deployer.repository.aether.AetherRepository\; \
			name				=		StrangeSkies\; \
			url					=		http://oss.jfrog.org/libs-snapshot/

-plugin.7.StrangeSkies: \
		${def;strangeSkiesRepo;\\\$\{strangeSkiesDefaultRepo\}}

#-plugin.8.EclipsePlatform: \
#\
#		aQute.bnd.deployer.repository.FixedIndexedRepo; \
#			name				=		"Eclipse Mars Platform"; \
#			locations			=		https://dl.bintray.com/sai/uk.co.saiman/org.eclipse.platform/4.5.1/index.xml

-plugin.9.EclipseFX: \
\
		aQute.bnd.deployer.repository.FixedIndexedRepo; \
			name				=		"E(fx)clipse Runtime 2.2.0"; \
			locations			=       http://download.eclipse.org/efxclipse/runtime-nightly/site/repository.xml.gz

-plugin.11.EclipsePlatform: \
\
		aQute.bnd.deployer.repository.FixedIndexedRepo; \
			name				=		"Eclipse Platform 4.5.1"; \
			locations			=		'\
										https://dl.bintray.com/strangeskies/org.eclipse/org.eclipse.platform/4.5.1/index.xml,\
										https://dl.bintray.com/strangeskies/org.eclipse/org.eclipse.jdt/4.5.1/index.xml,\
										https://dl.bintray.com/strangeskies/org.eclipse/org.eclipse.pde/4.5.1/index.xml,\
										https://dl.bintray.com/strangeskies/org.eclipse/org.eclipse.sdk/4.5.1/index.xml'

# For users with a copy of the uk.co.strangeskies project checked out
# from git locally, they can redirect dependencies on bundles in that
# project to local releases from the snapshots on OJO.
#
# The following can be added to a local.bnd file in cnf/ext/, which is
# excluded from git via .gitignore. The path specified by "local = ..."
# should point to the cnf/release/ repository for the local
# uk.co.strangeskies project.
#
#strangeSkiesDependency: uk.co.strangeskies.${1}\;version=latest
#strangeSkiesRepo: \
#\
#		aQute.bnd.deployer.repository.LocalIndexedRepo;\
#			name                =       StrangeSkies;\
#			pretty              =       true;\
#			local               =       ${user.home}[/git-location]/uk.co.strangeskies/cnf/release

## If you use git, you might want to uncomment the following lines:
Git-Descriptor: ${system-allow-fail;git describe --dirty --always}
Git-SHA: ${system-allow-fail;git rev-list -1 HEAD}
-diffignore: Git-Descriptor,Git-SHA


## Requirement
req: osgi.identity;filter:='(osgi.identity=${1})'

## Run path groups:
runpath.eclipse:\
	org.eclipse.osgi,\
	org.eclipse.osgi.compatibility.state,\
	org.eclipse.fx.osgi

runpath.eclipse.win64:\
	${runpath.eclipse},\
	org.eclipse.equinox.launcher.win32.win32.x86_64

runpath.eclipse.linux64:\
	${runpath.eclipse},\
	org.eclipse.equinox.launcher.gtk.linux.x86_64

## Run requirement groups:
runreq.base:\
	${req;osgi.enroute.logger.simple.provider}

# e4 base
runreq.eclipse.help:\
	${req;javax.el},\
	${req;javax.servlet},\
	${req;javax.servlet.jsp},\
	${req;org.apache.commons.logging},\
	${req;org.apache.lucene.analysis},\
	${req;org.apache.lucene.core},\
	${req;org.eclipse.ant.core},\
	${req;org.eclipse.equinox.http.jetty},\
	${req;org.eclipse.equinox.http.registry},\
	${req;org.eclipse.equinox.http.servlet},\
	${req;org.eclipse.equinox.jsp.jasper},\
	${req;org.eclipse.equinox.jsp.jasper.registry},\
	${req;org.eclipse.help},\
	${req;org.eclipse.help.base},\
	${req;org.eclipse.help.ui},\
	${req;org.eclipse.help.webapp},\
	${req;org.eclipse.platform.doc.user},\
	${req;org.eclipse.search},\
	${req;org.eclipse.ui.cheatsheets},\
	${req;org.eclipse.ui.net}

runreq.eclipse.sdk: \
	${req;org.eclipse.pde.runtime},\
	${req;org.eclipse.sdk}

runreq.eclipse:\
	${runreq.eclipse.help},\
	${runreq.eclipse.sdk},\
	${req;bndtools.runtime.eclipse.applaunch},\
	${req;org.eclipse.equinox.launcher},\
	${req;org.eclipse.equinox.console},\
	${req;org.eclipse.emf.databinding},\
	${req;org.eclipse.core.databinding.beans},\
	${req;org.eclipse.equinox.concurrent},\
	${req;org.eclipse.equinox.event},\
	${req;org.eclipse.fx.ui.databinding},\
	${req;org.eclipse.fx.ui.workbench.fx},\
	${req;org.eclipse.fx.ui.workbench.renderers.fx},\
	${req;org.eclipse.fx.ui.di},\
	${req;org.eclipse.fx.ui.di.interopt},\
	${req;org.eclipse.fx.core},\
	${req;org.eclipse.fx.core.di},\
	${req;org.eclipse.fx.core.di.context},\
	${req;org.eclipse.ui.ide},\
	${req;org.eclipse.jdt.core},\
	${req;org.eclipse.jdt.ui},\
	${req;org.eclipse.platform},\
	${req;org.eclipse.ui.ide.application}

runreq.eclipse.win64:\
	${runreq.eclipse},\
	${req;org.eclipse.core.filesystem.win32.x86_64},\
	${req;org.eclipse.core.resources.win32.x86_64},\
	${req;org.eclipse.equinox.security.win32.x86_64},\
	${req;org.eclipse.equinox.launcher.win32.win32.x86_64}

runreq.eclipse.linux64:\
	${runreq.eclipse},\
	${req;org.eclipse.core.filesystem.linux.x86_64},\
	${req;org.eclipse.core.net.linux.x86_64},\
	${req;org.eclipse.equinox.launcher.gtk.linux.x86_64},\
	${req;org.eclipse.swt.gtk.linux.x86_64}

# p2
runreq.eclipse.p2:\
	${req;org.eclipse.equinox.p2.core},\
	${req;org.eclipse.equinox.p2.engine},\
	${req;org.eclipse.equinox.p2.jarprocessor},\
	${req;org.eclipse.equinox.p2.metadata},\
	${req;org.eclipse.equinox.p2.metadata.repository},\
	${req;org.eclipse.equinox.p2.repository},\
	${req;org.eclipse.fx.core.p2}

# felix
runreq.felix.shell:\
	${req;org.apache.felix.gogo.command},\
	${req;org.apache.felix.gogo.shell},\
	${req;org.apache.felix.gogo.runtime}

runreq.felix.web:\
	${req;org.apache.felix.http.whiteboard},\
	${req;aQute.xray.plugin},\
	${req;org.apache.felix.webconsole.plugins.event},\
	${req;org.apache.felix.webconsole.plugins.memoryusage},\
	${req;org.apache.felix.webconsole.plugins.scriptconsole},\
	${req;org.apache.felix.webconsole.plugins.useradmin}

## Build path groups:
-buildpath.base=\
	osgi.enroute.base.api;version=latest

-testpath.base=\
	osgi.enroute.junit.wrapper,\
	osgi.enroute.hamcrest.wrapper,\
	org.hamcrest__java-hamcrest

buildpath.eclipse:\
	javax.inject,\
	org.eclipse.equinox.common,\
	org.eclipse.core.runtime,\
	org.eclipse.e4.ui.model.workbench,\
	org.eclipse.jface,\
	org.eclipse.e4.ui.services,\
	org.eclipse.e4.ui.workbench,\
	org.eclipse.e4.core.di,\
	org.eclipse.e4.core.di.annotations,\
	org.eclipse.e4.core.services,\
	org.eclipse.e4.ui.di,\
	org.eclipse.e4.core.contexts,\
	org.eclipse.fx.core,\
	org.eclipse.fx.core.di,\
	org.eclipse.fx.ui.di,\
	org.eclipse.fx.ui.theme,\
	org.eclipse.fx.ui.services

## Run properties groups:
runprops.eclipse:\
	osgi.framework.extensions=\
		org.eclipse.fx.osgi,\
	osgi.console=,\
	eclipse.consoleLog=true,\
	equinox.use.ds=true,\
	osgi.instance.area.default=./workspace,\
	osgi.console.enable.builtin=true,\
	osgi.clean=true,\
	clearPersistedState=true

## Run system packages groups:
systempath.eclipse:\
	com.sun.glass.ui,\
    javafx.animation,\
    javafx.application,\
    javafx.beans,\
    javafx.beans.binding,\
    javafx.beans.property,\
    javafx.beans.property.adapter,\
    javafx.beans.value,\
    javafx.collections,\
    javafx.concurrent,\
    javafx.embed.swing,\
    javafx.embed.swt,\
    javafx.event,\
    javafx.fxml,\
    javafx.geometry,\
    javafx.scene,\
    javafx.scene.canvas,\
    javafx.scene.chart,\
    javafx.scene.control,\
    javafx.scene.control.cell,\
    javafx.scene.effect,\
    javafx.scene.image,\
    javafx.scene.input,\
    javafx.scene.layout,\
    javafx.scene.media,\
    javafx.scene.paint,\
    javafx.scene.shape,\
    javafx.scene.text,\
    javafx.scene.transform,\
    javafx.scene.web,\
    javafx.stage,\
    javafx.util,\
    javafx.util.converter,\
    netscape.javascript

## General configuration
modabi-description: \
	Modabi is a modular data binding library for Java. It is format \
	agnostic, and schema can bind to interface over implementation. \
	Complex binding rules are supported, including e.g. support for \
	the builder pattern, so it's easy to plug into existing business \
	objects and API without modification. \
\
	Type safety is provided beyond the current best in class - to the \
	level of full generic input/output method invocation type \
	inference.